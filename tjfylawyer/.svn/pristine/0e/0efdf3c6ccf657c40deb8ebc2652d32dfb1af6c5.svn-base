package software.bbs.web.controller;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import software.bbs.data.dataobject.Postb;
import software.bbs.data.dataobject.Replyb;
import software.bbs.data.dataobject.Userb;
import software.bbs.service.PostService;
import software.bbs.service.ReplyService;
import software.bbs.service.model.ReplyModel;
import software.bbs.util.DateUtil;

@Controller
public class ReplyContorller {
	private static Logger logger=Logger.getLogger(ReplyContorller.class);
	@Resource
	ReplyService replyService;
	@Resource
	PostService postService;

	public void setPostService(PostService postService) {
		this.postService = postService;
	}
	
	public void setReplyService(ReplyService replyService) {
		this.replyService = replyService;
	}
	@RequestMapping(value = "/showReply.do", method = RequestMethod.GET)
	public String showReply(HttpServletRequest request,
			HttpServletResponse response, ModelMap model){
		Integer postId =Integer.parseInt(request.getParameter("postId")) ;
		List<ReplyModel> replyModels = replyService.ListReplyByPostId(postId);
		for(ReplyModel replyModel :replyModels){
			System.out.println(replyModel.getContent());
		}
		model.addAttribute("replyModels", replyModels);
		return "/bbs/front/index";
	}
	
	@RequestMapping(value = "/addReply.do",method = RequestMethod.POST)
	public String addReply(HttpServletRequest request,
			HttpServletResponse response, ModelMap model){
		HttpSession session = request.getSession();
		Integer postId =Integer.parseInt(request.getParameter("postId"));
		String title = request.getParameter("title");
		String content = request.getParameter("content");
		Userb user = (Userb) session.getAttribute("user");
		Replyb replyb = new Replyb();
		replyb.setPostId(postId);
		replyb.setTitle(title);
		replyb.setContent(content);
		replyb.setReplyerId(user.getUserId());
		 Calendar calendar = Calendar.getInstance();
		 SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
		 replyb.setReplyTime(DateUtil.parse(dateFormat.format(calendar.getTime()), DateUtil.secondFormat));
		 
		Postb postb = postService.findPostByPostId(postId);
		
		replyb.setFloor(postb.getMaxFloor()+1);
		//把post表中的最大层+1 然后更新
		postb.setMaxFloor(postb.getMaxFloor()+1);
		postService.updatePostb(postb);
		replyService.addReply(replyb);
		
		return "/bbs/front/index";
	}
}
